📥 [Program 1] Loaded instruction: [semWait userInput]
📥 [Program 1] Loaded instruction: [assign a input]
📥 [Program 1] Loaded instruction: [assign b input]
📥 [Program 1] Loaded instruction: [semSignal userInput]
📥 [Program 1] Loaded instruction: [semWait userOutput]
📥 [Program 1] Loaded instruction: [printFromTo a b]
📥 [Program 1] Loaded instruction: [semSignal userOutput]
📥 [Program 2] Loaded instruction: [semWait userInput]
📥 [Program 2] Loaded instruction: [assign a input]
📥 [Program 2] Loaded instruction: [assign b input]
📥 [Program 2] Loaded instruction: [semSignal userInput]
📥 [Program 2] Loaded instruction: [semWait file]
📥 [Program 2] Loaded instruction: [writeFile a b]
📥 [Program 2] Loaded instruction: [semSignal file]
📥 [Program 3] Loaded instruction: [semWait userInput]
📥 [Program 3] Loaded instruction: [assign a input]
📥 [Program 3] Loaded instruction: [semSignal userInput]
📥 [Program 3] Loaded instruction: [semWait file]
📥 [Program 3] Loaded instruction: [assign b readFile a]
📥 [Program 3] Loaded instruction: [semSignal file]
📥 [Program 3] Loaded instruction: [semWait userOutput]
📥 [Program 3] Loaded instruction: [print b]
📥 [Program 3] Loaded instruction: [semSignal userOutput]

🚀 Starting manual execution with algorithm: Round Robin

🌀 [Round Robin] Scheduled PID 1 with quantum 2
▶️ Running process PID: 1
🔢 [INPUT Program 1]: Enter START number for [a]: 🌀 [Round Robin] Scheduled PID 2 with quantum 2
▶️ Running process PID: 2
🌀 [Round Robin] Scheduled PID 3 with quantum 2
▶️ Running process PID: 3
🌀 [Round Robin] Scheduled PID 1 with quantum 2
▶️ Running process PID: 1
🔢 [INPUT Program 1]: Enter END number for [b]: 🚀 Process PID 2 unblocked and added back to scheduler.
🌀 [Round Robin] Scheduled PID 2 with quantum 2
▶️ Running process PID: 2
📝 [INPUT Program 2]: Enter FILENAME to write to: 🌀 [Round Robin] Scheduled PID 1 with quantum 2
▶️ Running process PID: 1
🔢 Range [1 to 5]: 1 2 3 4 5 
🌀 [Round Robin] Scheduled PID 2 with quantum 2
▶️ Running process PID: 2
🔧 [INPUT Program 2]: Enter DATA to write: 🚀 Process PID 3 unblocked and added back to scheduler.
🌀 [Round Robin] Scheduled PID 1 with quantum 2
▶️ Running process PID: 1
✅ Process PID 1 finished.
🌀 [Round Robin] Scheduled PID 3 with quantum 2
▶️ Running process PID: 3
📝 [INPUT Program 3]: Enter FILENAME to read from: 🌀 [Round Robin] Scheduled PID 2 with quantum 2
▶️ Running process PID: 2
📝 WROTE to [output2.txt]: hello rr2
🌀 [Round Robin] Scheduled PID 3 with quantum 2
▶️ Running process PID: 3
🌀 [Round Robin] Scheduled PID 2 with quantum 2
▶️ Running process PID: 2
🚀 Process PID 3 unblocked and added back to scheduler.
✅ Process PID 2 finished.
🌀 [Round Robin] Scheduled PID 3 with quantum 2
▶️ Running process PID: 3
🌀 [Round Robin] Scheduled PID 3 with quantum 2
▶️ Running process PID: 3
🌀 [Round Robin] Scheduled PID 3 with quantum 2
▶️ Running process PID: 3
🖨️ Printing: hello rr2
✅ Process PID 3 finished.

✅ All processes completed.

=== EXECUTION LOG ===

=== EVENT MESSAGES ===
➡️ [Program 1 | PID 1] Executing: semWait userInput
[PID 1] Requests resource [User Input]
[PID 1] Acquired [User Input]
➡️ [Program 1 | PID 1] Executing: assign a input
✅ Assigned [a] = [1]
➡️ [Program 2 | PID 2] Executing: semWait userInput
[PID 2] Requests resource [User Input]
[PID 2] BLOCKED on [User Input] (queue size: 1)
➡️ [Program 3 | PID 3] Executing: semWait userInput
[PID 3] Requests resource [User Input]
[PID 3] BLOCKED on [User Input] (queue size: 2)
➡️ [Program 1 | PID 1] Executing: assign b input
✅ Assigned [b] = [5]
➡️ [Program 1 | PID 1] Executing: semSignal userInput
[PID 1] RELEASED [User Input], [PID 2] UNBLOCKED and acquired
➡️ [Program 2 | PID 2] Executing: semWait userInput
[PID 2] Requests resource [User Input]
[PID 2] Acquired [User Input]
➡️ [Program 2 | PID 2] Executing: assign a input
✅ Assigned [a] = [output2.txt]
➡️ [Program 1 | PID 1] Executing: semWait userOutput
[PID 1] Requests resource [User Output]
[PID 1] Acquired [User Output]
➡️ [Program 1 | PID 1] Executing: printFromTo a b
🔢 [PID 1] printFromTo from 1 to 5:
➡️ [Program 2 | PID 2] Executing: assign b input
✅ Assigned [b] = [hello rr2]
➡️ [Program 2 | PID 2] Executing: semSignal userInput
[PID 2] RELEASED [User Input], [PID 3] UNBLOCKED and acquired
➡️ [Program 1 | PID 1] Executing: semSignal userOutput
[PID 1] RELEASED [User Output] (no waiting)
➡️ [Program 3 | PID 3] Executing: semWait userInput
[PID 3] Requests resource [User Input]
[PID 3] Acquired [User Input]
➡️ [Program 3 | PID 3] Executing: assign a input
✅ Assigned [a] = [output2.txt]
➡️ [Program 2 | PID 2] Executing: semWait file
[PID 2] Requests resource [File]
[PID 2] Acquired [File]
➡️ [Program 2 | PID 2] Executing: writeFile a b
📝 [PID 2] WROTE to [output2.txt]: hello rr2
➡️ [Program 3 | PID 3] Executing: semSignal userInput
[PID 3] RELEASED [User Input] (no waiting)
➡️ [Program 3 | PID 3] Executing: semWait file
[PID 3] Requests resource [File]
[PID 3] BLOCKED on [File] (queue size: 1)
➡️ [Program 2 | PID 2] Executing: semSignal file
[PID 2] RELEASED [File], [PID 3] UNBLOCKED and acquired
➡️ [Program 3 | PID 3] Executing: semWait file
[PID 3] Requests resource [File]
[PID 3] Acquired [File]
➡️ [Program 3 | PID 3] Executing: assign b readFile a
📖 READ [output2.txt] into [b]: hello rr2
➡️ [Program 3 | PID 3] Executing: semSignal file
[PID 3] RELEASED [File] (no waiting)
➡️ [Program 3 | PID 3] Executing: semWait userOutput
[PID 3] Requests resource [User Output]
[PID 3] Acquired [User Output]
➡️ [Program 3 | PID 3] Executing: print b
🖨️ Printing: hello rr2
➡️ [Program 3 | PID 3] Executing: semSignal userOutput
[PID 3] RELEASED [User Output] (no waiting)

📁 Logs saved to logs.txt ✅
